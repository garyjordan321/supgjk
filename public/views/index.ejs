<div class="container mt-4">
	<div class="row">
		<div class="col-12 mb-3">
			<h1 class="m-0 p-0 text-center">Uno Game</h1>
		</div>
		<div class="card p-3 mb-3">
			<div class="row justify-content-center">
				<div class="col-lg-8">
					<div class="mb-3">
						<form id="roomform" onsubmit="createRoom(event)">
							<div class="input-group mb-3">
								<input type="text" id="roominput" class="form-control"
									placeholder="Room Name* (min: 3)">
								<button type="submit" id="button-addon2" class="btn btn-success">Create Room</button>
							</div>
						</form>
					</div>
				</div>
				<div class="col-lg-4">
				</div>
			</div>
			<div class="row justify-content-center">
				<div class="col-lg-8 mb-3">
					<h3>Join Room</h3>
					<div class="card p-1" style="height:500px;background:#aeafad;">
						<ul id="room_list" class="list-group table-striped" style="overflow-x:hidden;overflow-y:auto;">
						</ul>
					</div>
				</div>
				<div class="col-lg-4 mb-3">
					<h3>Global Chat</h3>
					<div class="card p-1" style="height:500px;background:#aeafad;">
						<ul id="messages" class="list-group table-striped" style="overflow-x:hidden;overflow-y:auto;">

						</ul>
						<div class="" style="position:absolute;bottom:0;left:0;right:0;">
							<form id="chatform" onsubmit="sendMessage(event)">
								<div class="input-group">
									<input type="text" id="chatinput" class="form-control" placeholder="Message">
									<button type="submit" id="button-addon2" class="btn btn-success">Send</button>
								</div>
							</form>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

<script src="/socket.io/socket.io.js"></script>
<script>
	const username = '<%- user.username %>';
	const endpoint = "https://uno-team-4.herokuapp.com";
	const socket = io(endpoint, { autoConnect: false });

	if (username !== undefined) {
		socket.auth = { username };
		socket.connect();
	} else {
		window.location.href = endpoint + "/login";
	}

	var roominput = document.getElementById('roominput');
	var room_list = document.getElementById("room_list");

	var chatinput = document.getElementById('chatinput');
	var messages = document.getElementById('messages');

	socket.on("update room list", function ({ rooms }) {
		room_list.innerHTML = "";
		let roomlist = Object.values(rooms)
		roomlist.forEach(room => {
			let list = document.createElement("li");
			list.classList.add("list-group-item", "d-flex", "justify-content-between");
			list.innerHTML = `<span> ${room.name} </span>
				<span>
					<span> ${room.player_count}/4 </span>
					<button id="${room.id}" class="btn btn-sm btn-success">Join Room</button>
				</span>`
			room_list.appendChild(list);
			document.getElementById(room.id).addEventListener("click", function (e) {
				e.preventDefault();
				joinRoom(room.id);
			})
		});
	});

	socket.on('global chat', function (msg) {
		var message = document.createElement("li");
		message.innerHTML = `<span style="width:25px;height:25px;"><img style="width:25px;height:25px;" src="/img/avatar/default-image.png"
									alt="#" /></span>
							<span class="ml-2">${msg}</span>`;
		message.classList.add("list-group-item");
		messages.appendChild(message);
		messages.scrollTo(0, document.body.scrollHeight);
	});

	function createRoom(e) {
		e.preventDefault();
		if (!roominput.value) {
			alert("Room name is required");
			return;
		}
		socket.emit("create room", roominput.value, (res) => {
			if (res.status == false) {
				window.location.href = endpoint + "/login"
				return;
			}
			roominput.value = '';
			window.location.href = endpoint + "/game?roomid=" + res.room.id;
		});
	}

	function joinRoom(roomid) {
		socket.emit("join room", roomid, (res) => {
			if (res.status == false) {
				alert(res.message);
			} else {
				window.location.href = endpoint + "/game?roomid=" + res.room.id;
			}
		})
	}

	function sendMessage(e) {
		e.preventDefault();
		if (chatinput.value) {
			socket.emit('global chat', chatinput.value);
			chatinput.value = '';
		}
	}

</script>